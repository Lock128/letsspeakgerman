# Docker Compose file for User Admin Messaging application
# Note: version field is no longer required in newer Docker Compose versions

services:
  # Redis service for connection management
  redis:
    image: redis:7-alpine
    container_name: user-admin-messaging-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - user-admin-messaging

  # WebSocket service
  websocket:
    build:
      context: ./websocket-server
      dockerfile: Dockerfile
    container_name: user-admin-messaging-websocket
    ports:
      - "8080:8080"
      - "8081:8081"
    environment:
      - DEPLOYMENT_MODE=kubernetes
      - REDIS_URL=redis://redis:6379
      - PORT=8080
      - HEALTH_PORT=8081
      - NODE_ENV=development
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - user-admin-messaging
    restart: unless-stopped

  # User frontend service
  user-frontend:
    build:
      context: .
      dockerfile: frontend/user/Dockerfile
    container_name: user-admin-messaging-user-frontend
    ports:
      - "8082:80"
    environment:
      - NODE_ENV=development
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - user-admin-messaging
    restart: unless-stopped

  # Admin frontend service
  admin-frontend:
    build:
      context: .
      dockerfile: frontend/admin/Dockerfile
    container_name: user-admin-messaging-admin-frontend
    ports:
      - "8083:80"
    environment:
      - NODE_ENV=development
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - user-admin-messaging
    restart: unless-stopped

  # Nginx reverse proxy for local development
  nginx:
    image: nginx:alpine
    container_name: user-admin-messaging-nginx
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - websocket
      - user-frontend
      - admin-frontend
    networks:
      - user-admin-messaging
    restart: unless-stopped

volumes:
  redis_data:
    driver: local

networks:
  user-admin-messaging:
    driver: bridge
    name: user-admin-messaging-network